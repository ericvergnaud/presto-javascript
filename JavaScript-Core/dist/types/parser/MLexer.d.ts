import { ATN, CharStream, DFA, Lexer } from "antlr4";
export default class MLexer extends Lexer {
    static readonly INDENT = 1;
    static readonly DEDENT = 2;
    static readonly LF_TAB = 3;
    static readonly LF_MORE = 4;
    static readonly LF = 5;
    static readonly TAB = 6;
    static readonly WS = 7;
    static readonly CSS_DATA = 8;
    static readonly COMMENT = 9;
    static readonly JAVA = 10;
    static readonly CSHARP = 11;
    static readonly PYTHON2 = 12;
    static readonly PYTHON3 = 13;
    static readonly JAVASCRIPT = 14;
    static readonly SWIFT = 15;
    static readonly COLON = 16;
    static readonly SEMI = 17;
    static readonly COMMA = 18;
    static readonly RANGE = 19;
    static readonly DOT = 20;
    static readonly LPAR = 21;
    static readonly RPAR = 22;
    static readonly LBRAK = 23;
    static readonly RBRAK = 24;
    static readonly LCURL = 25;
    static readonly RCURL = 26;
    static readonly QMARK = 27;
    static readonly XMARK = 28;
    static readonly AMP = 29;
    static readonly AMP2 = 30;
    static readonly PIPE = 31;
    static readonly PIPE2 = 32;
    static readonly PLUS = 33;
    static readonly MINUS = 34;
    static readonly STAR = 35;
    static readonly SLASH = 36;
    static readonly BSLASH = 37;
    static readonly PERCENT = 38;
    static readonly SHARP = 39;
    static readonly GT = 40;
    static readonly GTE = 41;
    static readonly LT = 42;
    static readonly LTE = 43;
    static readonly LTGT = 44;
    static readonly LTCOLONGT = 45;
    static readonly EQ = 46;
    static readonly XEQ = 47;
    static readonly EQ2 = 48;
    static readonly TEQ = 49;
    static readonly TILDE = 50;
    static readonly LARROW = 51;
    static readonly RARROW = 52;
    static readonly EGT = 53;
    static readonly BOOLEAN = 54;
    static readonly CSS = 55;
    static readonly CHARACTER = 56;
    static readonly TEXT = 57;
    static readonly INTEGER = 58;
    static readonly DECIMAL = 59;
    static readonly DATE = 60;
    static readonly TIME = 61;
    static readonly DATETIME = 62;
    static readonly PERIOD = 63;
    static readonly VERSION = 64;
    static readonly METHOD_COLON = 65;
    static readonly CODE = 66;
    static readonly DOCUMENT = 67;
    static readonly BLOB = 68;
    static readonly IMAGE = 69;
    static readonly UUID = 70;
    static readonly DBID = 71;
    static readonly ITERATOR = 72;
    static readonly CURSOR = 73;
    static readonly HTML = 74;
    static readonly TYPE = 75;
    static readonly ABSTRACT = 76;
    static readonly ALL = 77;
    static readonly ALWAYS = 78;
    static readonly AND = 79;
    static readonly ANY = 80;
    static readonly AS = 81;
    static readonly ASC = 82;
    static readonly ATTR = 83;
    static readonly ATTRIBUTE = 84;
    static readonly ATTRIBUTES = 85;
    static readonly BINDINGS = 86;
    static readonly BREAK = 87;
    static readonly BY = 88;
    static readonly CASE = 89;
    static readonly CATCH = 90;
    static readonly CATEGORY = 91;
    static readonly CLASS = 92;
    static readonly CONTAINS = 93;
    static readonly DEF = 94;
    static readonly DEFAULT = 95;
    static readonly DEFINE = 96;
    static readonly DELETE = 97;
    static readonly DESC = 98;
    static readonly DO = 99;
    static readonly DOING = 100;
    static readonly EACH = 101;
    static readonly ELSE = 102;
    static readonly ENUM = 103;
    static readonly ENUMERATED = 104;
    static readonly EXCEPT = 105;
    static readonly EXECUTE = 106;
    static readonly EXPECTING = 107;
    static readonly EXTENDS = 108;
    static readonly FETCH = 109;
    static readonly FILTERED = 110;
    static readonly FINALLY = 111;
    static readonly FLUSH = 112;
    static readonly FOR = 113;
    static readonly FROM = 114;
    static readonly GETTER = 115;
    static readonly HAS = 116;
    static readonly IF = 117;
    static readonly IN = 118;
    static readonly INCLUDE = 119;
    static readonly INDEX = 120;
    static readonly INVOKE_COLON = 121;
    static readonly IS = 122;
    static readonly MATCHING = 123;
    static readonly METHOD = 124;
    static readonly METHODS = 125;
    static readonly MODULO = 126;
    static readonly MUTABLE = 127;
    static readonly NATIVE = 128;
    static readonly NONE = 129;
    static readonly NOT = 130;
    static readonly NOTHING = 131;
    static readonly NULL = 132;
    static readonly ON = 133;
    static readonly ONE = 134;
    static readonly OPERATOR = 135;
    static readonly OR = 136;
    static readonly ORDER = 137;
    static readonly OTHERWISE = 138;
    static readonly PASS = 139;
    static readonly RAISE = 140;
    static readonly READ = 141;
    static readonly RECEIVING = 142;
    static readonly RESOURCE = 143;
    static readonly RETURN = 144;
    static readonly RETURNING = 145;
    static readonly ROWS = 146;
    static readonly SELF = 147;
    static readonly SETTER = 148;
    static readonly SINGLETON = 149;
    static readonly SORTED = 150;
    static readonly STORABLE = 151;
    static readonly STORE = 152;
    static readonly SUPER = 153;
    static readonly SWITCH = 154;
    static readonly TEST = 155;
    static readonly THEN = 156;
    static readonly THIS = 157;
    static readonly THROW = 158;
    static readonly TO = 159;
    static readonly TRY = 160;
    static readonly VERIFYING = 161;
    static readonly WIDGET = 162;
    static readonly WITH = 163;
    static readonly WHEN = 164;
    static readonly WHERE = 165;
    static readonly WHILE = 166;
    static readonly WRITE = 167;
    static readonly BOOLEAN_LITERAL = 168;
    static readonly CHAR_LITERAL = 169;
    static readonly MIN_INTEGER = 170;
    static readonly MAX_INTEGER = 171;
    static readonly SYMBOL_IDENTIFIER = 172;
    static readonly TYPE_IDENTIFIER = 173;
    static readonly VARIABLE_IDENTIFIER = 174;
    static readonly NATIVE_IDENTIFIER = 175;
    static readonly DOLLAR_IDENTIFIER = 176;
    static readonly ARONDBASE_IDENTIFIER = 177;
    static readonly TEXT_LITERAL = 178;
    static readonly UUID_LITERAL = 179;
    static readonly VERSION_LITERAL = 180;
    static readonly INTEGER_LITERAL = 181;
    static readonly HEXA_LITERAL = 182;
    static readonly DECIMAL_LITERAL = 183;
    static readonly DATETIME_LITERAL = 184;
    static readonly TIME_LITERAL = 185;
    static readonly DATE_LITERAL = 186;
    static readonly PERIOD_LITERAL = 187;
    static readonly JSX_TEXT = 188;
    static readonly EOF: number;
    static readonly channelNames: string[];
    static readonly literalNames: string[];
    static readonly symbolicNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    constructor(input: CharStream);
    get grammarFileName(): string;
    get literalNames(): (string | null)[];
    get symbolicNames(): (string | null)[];
    get ruleNames(): string[];
    get serializedATN(): number[];
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: number[];
    private static __ATN;
    static get _ATN(): ATN;
    static DecisionsToDFA: DFA[];
}
